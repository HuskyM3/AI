Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> spec
Rule 1     spec -> <empty>
Rule 2     spec -> boolexpr spec
Rule 3     boolexpr -> FORALL ID uboolexpr
Rule 4     uboolexpr -> FORALL ID uboolexpr
Rule 5     uboolexpr -> LPAREN boolexpr RPAREN
Rule 6     uboolexpr -> atom
Rule 7     boolexpr -> EXISTS ID uboolexpr
Rule 8     uboolexpr -> EXISTS ID uboolexpr
Rule 9     boolexpr -> boolexpr AND boolexpr
Rule 10    boolexpr -> boolexpr OR boolexpr
Rule 11    boolexpr -> boolexpr IMPLIES boolexpr
Rule 12    boolexpr -> boolexpr EQVI boolexpr
Rule 13    boolexpr -> NOT boolexpr
Rule 14    boolexpr -> term EQ term
Rule 15    boolexpr -> term NEQ term
Rule 16    boolexpr -> atom
Rule 17    boolexpr -> LPAREN boolexpr RPAREN
Rule 18    termlist -> term COMMA termlist
Rule 19    termlist -> term
Rule 20    term -> ID
Rule 21    atom -> ID LPAREN termlist RPAREN

Terminals, with rules where they appear

AND                  : 9
COMMA                : 18
EQ                   : 14
EQVI                 : 12
EXISTS               : 7 8
FORALL               : 3 4
ID                   : 3 4 7 8 20 21
IMPLIES              : 11
LPAREN               : 5 17 21
NEQ                  : 15
NOT                  : 13
OR                   : 10
RPAREN               : 5 17 21
error                : 

Nonterminals, with rules where they appear

atom                 : 6 16
boolexpr             : 2 5 9 9 10 10 11 11 12 12 13 17
spec                 : 2 0
term                 : 14 14 15 15 18 19
termlist             : 18 21
uboolexpr            : 3 4 7 8

Parsing method: LALR

state 0

    (0) S' -> . spec
    (1) spec -> .
    (2) spec -> . boolexpr spec
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    $end            reduce using rule 1 (spec -> .)
    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    spec                           shift and go to state 1
    boolexpr                       shift and go to state 2
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 1

    (0) S' -> spec .



state 2

    (2) spec -> boolexpr . spec
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr
    (1) spec -> .
    (2) spec -> . boolexpr spec
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    AND             shift and go to state 11
    OR              shift and go to state 12
    IMPLIES         shift and go to state 13
    EQVI            shift and go to state 14
    $end            reduce using rule 1 (spec -> .)
    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 2
    spec                           shift and go to state 10
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 3

    (3) boolexpr -> FORALL . ID uboolexpr

    ID              shift and go to state 15


state 4

    (20) term -> ID .
    (21) atom -> ID . LPAREN termlist RPAREN

    EQ              reduce using rule 20 (term -> ID .)
    NEQ             reduce using rule 20 (term -> ID .)
    LPAREN          shift and go to state 16


state 5

    (7) boolexpr -> EXISTS . ID uboolexpr

    ID              shift and go to state 17


state 6

    (13) boolexpr -> NOT . boolexpr
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 18
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 7

    (14) boolexpr -> term . EQ term
    (15) boolexpr -> term . NEQ term

    EQ              shift and go to state 19
    NEQ             shift and go to state 20


state 8

    (16) boolexpr -> atom .

    AND             reduce using rule 16 (boolexpr -> atom .)
    OR              reduce using rule 16 (boolexpr -> atom .)
    IMPLIES         reduce using rule 16 (boolexpr -> atom .)
    EQVI            reduce using rule 16 (boolexpr -> atom .)
    FORALL          reduce using rule 16 (boolexpr -> atom .)
    EXISTS          reduce using rule 16 (boolexpr -> atom .)
    NOT             reduce using rule 16 (boolexpr -> atom .)
    LPAREN          reduce using rule 16 (boolexpr -> atom .)
    ID              reduce using rule 16 (boolexpr -> atom .)
    $end            reduce using rule 16 (boolexpr -> atom .)
    RPAREN          reduce using rule 16 (boolexpr -> atom .)


state 9

    (17) boolexpr -> LPAREN . boolexpr RPAREN
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 21
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 10

    (2) spec -> boolexpr spec .

    $end            reduce using rule 2 (spec -> boolexpr spec .)


state 11

    (9) boolexpr -> boolexpr AND . boolexpr
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 22
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 12

    (10) boolexpr -> boolexpr OR . boolexpr
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 23
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 13

    (11) boolexpr -> boolexpr IMPLIES . boolexpr
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 24
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 14

    (12) boolexpr -> boolexpr EQVI . boolexpr
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 25
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 15

    (3) boolexpr -> FORALL ID . uboolexpr
    (4) uboolexpr -> . FORALL ID uboolexpr
    (5) uboolexpr -> . LPAREN boolexpr RPAREN
    (6) uboolexpr -> . atom
    (8) uboolexpr -> . EXISTS ID uboolexpr
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 26
    LPAREN          shift and go to state 29
    EXISTS          shift and go to state 31
    ID              shift and go to state 27

    uboolexpr                      shift and go to state 28
    atom                           shift and go to state 30

state 16

    (21) atom -> ID LPAREN . termlist RPAREN
    (18) termlist -> . term COMMA termlist
    (19) termlist -> . term
    (20) term -> . ID

    ID              shift and go to state 32

    termlist                       shift and go to state 33
    term                           shift and go to state 34

state 17

    (7) boolexpr -> EXISTS ID . uboolexpr
    (4) uboolexpr -> . FORALL ID uboolexpr
    (5) uboolexpr -> . LPAREN boolexpr RPAREN
    (6) uboolexpr -> . atom
    (8) uboolexpr -> . EXISTS ID uboolexpr
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 26
    LPAREN          shift and go to state 29
    EXISTS          shift and go to state 31
    ID              shift and go to state 27

    uboolexpr                      shift and go to state 35
    atom                           shift and go to state 30

state 18

    (13) boolexpr -> NOT boolexpr .
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr

    AND             reduce using rule 13 (boolexpr -> NOT boolexpr .)
    OR              reduce using rule 13 (boolexpr -> NOT boolexpr .)
    IMPLIES         reduce using rule 13 (boolexpr -> NOT boolexpr .)
    EQVI            reduce using rule 13 (boolexpr -> NOT boolexpr .)
    FORALL          reduce using rule 13 (boolexpr -> NOT boolexpr .)
    EXISTS          reduce using rule 13 (boolexpr -> NOT boolexpr .)
    NOT             reduce using rule 13 (boolexpr -> NOT boolexpr .)
    LPAREN          reduce using rule 13 (boolexpr -> NOT boolexpr .)
    ID              reduce using rule 13 (boolexpr -> NOT boolexpr .)
    $end            reduce using rule 13 (boolexpr -> NOT boolexpr .)
    RPAREN          reduce using rule 13 (boolexpr -> NOT boolexpr .)

  ! AND             [ shift and go to state 11 ]
  ! OR              [ shift and go to state 12 ]
  ! IMPLIES         [ shift and go to state 13 ]
  ! EQVI            [ shift and go to state 14 ]


state 19

    (14) boolexpr -> term EQ . term
    (20) term -> . ID

    ID              shift and go to state 32

    term                           shift and go to state 36

state 20

    (15) boolexpr -> term NEQ . term
    (20) term -> . ID

    ID              shift and go to state 32

    term                           shift and go to state 37

state 21

    (17) boolexpr -> LPAREN boolexpr . RPAREN
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr

    RPAREN          shift and go to state 38
    AND             shift and go to state 11
    OR              shift and go to state 12
    IMPLIES         shift and go to state 13
    EQVI            shift and go to state 14


state 22

    (9) boolexpr -> boolexpr AND boolexpr .
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr

    AND             reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    OR              reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    IMPLIES         reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    EQVI            reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    FORALL          reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    EXISTS          reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    NOT             reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    LPAREN          reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    ID              reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    $end            reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)
    RPAREN          reduce using rule 9 (boolexpr -> boolexpr AND boolexpr .)

  ! AND             [ shift and go to state 11 ]
  ! OR              [ shift and go to state 12 ]
  ! IMPLIES         [ shift and go to state 13 ]
  ! EQVI            [ shift and go to state 14 ]


state 23

    (10) boolexpr -> boolexpr OR boolexpr .
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr

    AND             reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    OR              reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    IMPLIES         reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    EQVI            reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    FORALL          reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    EXISTS          reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    NOT             reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    LPAREN          reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    ID              reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    $end            reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)
    RPAREN          reduce using rule 10 (boolexpr -> boolexpr OR boolexpr .)

  ! AND             [ shift and go to state 11 ]
  ! OR              [ shift and go to state 12 ]
  ! IMPLIES         [ shift and go to state 13 ]
  ! EQVI            [ shift and go to state 14 ]


state 24

    (11) boolexpr -> boolexpr IMPLIES boolexpr .
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr

    EQVI            reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    FORALL          reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    EXISTS          reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    NOT             reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    LPAREN          reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    ID              reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    $end            reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    RPAREN          reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    IMPLIES         shift and go to state 13

  ! AND             [ reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .) ]
  ! OR              [ reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .) ]
  ! IMPLIES         [ reduce using rule 11 (boolexpr -> boolexpr IMPLIES boolexpr .) ]
  ! EQVI            [ shift and go to state 14 ]


state 25

    (12) boolexpr -> boolexpr EQVI boolexpr .
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr

    FORALL          reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .)
    EXISTS          reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .)
    NOT             reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .)
    LPAREN          reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .)
    ID              reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .)
    $end            reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .)
    RPAREN          reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .)
    AND             shift and go to state 11
    OR              shift and go to state 12
    IMPLIES         shift and go to state 13
    EQVI            shift and go to state 14

  ! AND             [ reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! OR              [ reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! IMPLIES         [ reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! EQVI            [ reduce using rule 12 (boolexpr -> boolexpr EQVI boolexpr .) ]


state 26

    (4) uboolexpr -> FORALL . ID uboolexpr

    ID              shift and go to state 39


state 27

    (21) atom -> ID . LPAREN termlist RPAREN

    LPAREN          shift and go to state 16


state 28

    (3) boolexpr -> FORALL ID uboolexpr .

    AND             reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    OR              reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    IMPLIES         reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    EQVI            reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    FORALL          reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    EXISTS          reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    NOT             reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    LPAREN          reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    ID              reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    $end            reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)
    RPAREN          reduce using rule 3 (boolexpr -> FORALL ID uboolexpr .)


state 29

    (5) uboolexpr -> LPAREN . boolexpr RPAREN
    (3) boolexpr -> . FORALL ID uboolexpr
    (7) boolexpr -> . EXISTS ID uboolexpr
    (9) boolexpr -> . boolexpr AND boolexpr
    (10) boolexpr -> . boolexpr OR boolexpr
    (11) boolexpr -> . boolexpr IMPLIES boolexpr
    (12) boolexpr -> . boolexpr EQVI boolexpr
    (13) boolexpr -> . NOT boolexpr
    (14) boolexpr -> . term EQ term
    (15) boolexpr -> . term NEQ term
    (16) boolexpr -> . atom
    (17) boolexpr -> . LPAREN boolexpr RPAREN
    (20) term -> . ID
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 3
    EXISTS          shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 9
    ID              shift and go to state 4

    boolexpr                       shift and go to state 40
    term                           shift and go to state 7
    atom                           shift and go to state 8

state 30

    (6) uboolexpr -> atom .

    AND             reduce using rule 6 (uboolexpr -> atom .)
    OR              reduce using rule 6 (uboolexpr -> atom .)
    IMPLIES         reduce using rule 6 (uboolexpr -> atom .)
    EQVI            reduce using rule 6 (uboolexpr -> atom .)
    FORALL          reduce using rule 6 (uboolexpr -> atom .)
    EXISTS          reduce using rule 6 (uboolexpr -> atom .)
    NOT             reduce using rule 6 (uboolexpr -> atom .)
    LPAREN          reduce using rule 6 (uboolexpr -> atom .)
    ID              reduce using rule 6 (uboolexpr -> atom .)
    $end            reduce using rule 6 (uboolexpr -> atom .)
    RPAREN          reduce using rule 6 (uboolexpr -> atom .)


state 31

    (8) uboolexpr -> EXISTS . ID uboolexpr

    ID              shift and go to state 41


state 32

    (20) term -> ID .

    COMMA           reduce using rule 20 (term -> ID .)
    RPAREN          reduce using rule 20 (term -> ID .)
    AND             reduce using rule 20 (term -> ID .)
    OR              reduce using rule 20 (term -> ID .)
    IMPLIES         reduce using rule 20 (term -> ID .)
    EQVI            reduce using rule 20 (term -> ID .)
    FORALL          reduce using rule 20 (term -> ID .)
    EXISTS          reduce using rule 20 (term -> ID .)
    NOT             reduce using rule 20 (term -> ID .)
    LPAREN          reduce using rule 20 (term -> ID .)
    ID              reduce using rule 20 (term -> ID .)
    $end            reduce using rule 20 (term -> ID .)


state 33

    (21) atom -> ID LPAREN termlist . RPAREN

    RPAREN          shift and go to state 42


state 34

    (18) termlist -> term . COMMA termlist
    (19) termlist -> term .

    COMMA           shift and go to state 43
    RPAREN          reduce using rule 19 (termlist -> term .)


state 35

    (7) boolexpr -> EXISTS ID uboolexpr .

    AND             reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    OR              reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    IMPLIES         reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    EQVI            reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    FORALL          reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    EXISTS          reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    NOT             reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    LPAREN          reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    ID              reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    $end            reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)
    RPAREN          reduce using rule 7 (boolexpr -> EXISTS ID uboolexpr .)


state 36

    (14) boolexpr -> term EQ term .

    AND             reduce using rule 14 (boolexpr -> term EQ term .)
    OR              reduce using rule 14 (boolexpr -> term EQ term .)
    IMPLIES         reduce using rule 14 (boolexpr -> term EQ term .)
    EQVI            reduce using rule 14 (boolexpr -> term EQ term .)
    FORALL          reduce using rule 14 (boolexpr -> term EQ term .)
    EXISTS          reduce using rule 14 (boolexpr -> term EQ term .)
    NOT             reduce using rule 14 (boolexpr -> term EQ term .)
    LPAREN          reduce using rule 14 (boolexpr -> term EQ term .)
    ID              reduce using rule 14 (boolexpr -> term EQ term .)
    $end            reduce using rule 14 (boolexpr -> term EQ term .)
    RPAREN          reduce using rule 14 (boolexpr -> term EQ term .)


state 37

    (15) boolexpr -> term NEQ term .

    AND             reduce using rule 15 (boolexpr -> term NEQ term .)
    OR              reduce using rule 15 (boolexpr -> term NEQ term .)
    IMPLIES         reduce using rule 15 (boolexpr -> term NEQ term .)
    EQVI            reduce using rule 15 (boolexpr -> term NEQ term .)
    FORALL          reduce using rule 15 (boolexpr -> term NEQ term .)
    EXISTS          reduce using rule 15 (boolexpr -> term NEQ term .)
    NOT             reduce using rule 15 (boolexpr -> term NEQ term .)
    LPAREN          reduce using rule 15 (boolexpr -> term NEQ term .)
    ID              reduce using rule 15 (boolexpr -> term NEQ term .)
    $end            reduce using rule 15 (boolexpr -> term NEQ term .)
    RPAREN          reduce using rule 15 (boolexpr -> term NEQ term .)


state 38

    (17) boolexpr -> LPAREN boolexpr RPAREN .

    AND             reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    OR              reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    IMPLIES         reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    EQVI            reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    FORALL          reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    EXISTS          reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    NOT             reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    LPAREN          reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    ID              reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    $end            reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)
    RPAREN          reduce using rule 17 (boolexpr -> LPAREN boolexpr RPAREN .)


state 39

    (4) uboolexpr -> FORALL ID . uboolexpr
    (4) uboolexpr -> . FORALL ID uboolexpr
    (5) uboolexpr -> . LPAREN boolexpr RPAREN
    (6) uboolexpr -> . atom
    (8) uboolexpr -> . EXISTS ID uboolexpr
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 26
    LPAREN          shift and go to state 29
    EXISTS          shift and go to state 31
    ID              shift and go to state 27

    uboolexpr                      shift and go to state 44
    atom                           shift and go to state 30

state 40

    (5) uboolexpr -> LPAREN boolexpr . RPAREN
    (9) boolexpr -> boolexpr . AND boolexpr
    (10) boolexpr -> boolexpr . OR boolexpr
    (11) boolexpr -> boolexpr . IMPLIES boolexpr
    (12) boolexpr -> boolexpr . EQVI boolexpr

    RPAREN          shift and go to state 45
    AND             shift and go to state 11
    OR              shift and go to state 12
    IMPLIES         shift and go to state 13
    EQVI            shift and go to state 14


state 41

    (8) uboolexpr -> EXISTS ID . uboolexpr
    (4) uboolexpr -> . FORALL ID uboolexpr
    (5) uboolexpr -> . LPAREN boolexpr RPAREN
    (6) uboolexpr -> . atom
    (8) uboolexpr -> . EXISTS ID uboolexpr
    (21) atom -> . ID LPAREN termlist RPAREN

    FORALL          shift and go to state 26
    LPAREN          shift and go to state 29
    EXISTS          shift and go to state 31
    ID              shift and go to state 27

    uboolexpr                      shift and go to state 46
    atom                           shift and go to state 30

state 42

    (21) atom -> ID LPAREN termlist RPAREN .

    AND             reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    OR              reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    IMPLIES         reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    EQVI            reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    FORALL          reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    EXISTS          reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    NOT             reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    LPAREN          reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    ID              reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    $end            reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)
    RPAREN          reduce using rule 21 (atom -> ID LPAREN termlist RPAREN .)


state 43

    (18) termlist -> term COMMA . termlist
    (18) termlist -> . term COMMA termlist
    (19) termlist -> . term
    (20) term -> . ID

    ID              shift and go to state 32

    term                           shift and go to state 34
    termlist                       shift and go to state 47

state 44

    (4) uboolexpr -> FORALL ID uboolexpr .

    AND             reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    OR              reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    IMPLIES         reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    EQVI            reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    FORALL          reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    EXISTS          reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    NOT             reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    LPAREN          reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    ID              reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    $end            reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)
    RPAREN          reduce using rule 4 (uboolexpr -> FORALL ID uboolexpr .)


state 45

    (5) uboolexpr -> LPAREN boolexpr RPAREN .

    AND             reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    OR              reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    IMPLIES         reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    EQVI            reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    FORALL          reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    EXISTS          reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    NOT             reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    LPAREN          reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    ID              reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    $end            reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)
    RPAREN          reduce using rule 5 (uboolexpr -> LPAREN boolexpr RPAREN .)


state 46

    (8) uboolexpr -> EXISTS ID uboolexpr .

    AND             reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    OR              reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    IMPLIES         reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    EQVI            reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    FORALL          reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    EXISTS          reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    NOT             reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    LPAREN          reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    ID              reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    $end            reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)
    RPAREN          reduce using rule 8 (uboolexpr -> EXISTS ID uboolexpr .)


state 47

    (18) termlist -> term COMMA termlist .

    RPAREN          reduce using rule 18 (termlist -> term COMMA termlist .)

